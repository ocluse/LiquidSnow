@using Microsoft.AspNetCore.Components.Forms;
@inherits ControlBase
<div class="@GetClass()" style="@GetStyle()" @ondragenter="OnDragEnter" @ondragleave="OnDragLeave">
    @if (ChildContent != null)
    {
        @ChildContent
    }
    <div class="dropzone">
        <InputFile OnChange="OnFilesChanged" AdditionalAttributes="GetAttributes()" />

        @if (MessageContent != null)
        {
            @MessageContent
        }
        else
        {
            <div style="padding:2rem;">Click to browse or drop files here</div>
        }
    </div>
</div>

@code {
    private bool _isDragging;

    protected override void BuildClass(ClassBuilder classBuilder)
    {
        base.BuildClass(classBuilder);
        classBuilder.Add("upload-file");
        classBuilder.AddIf(_isDragging, DragClass);
    }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback<InputFileChangeEventArgs> OnFilesChanged { get; set; }

    [Parameter]
    public bool Multiple { get; set; } = true;

    [Parameter]
    public string? Accept { get; set; }

    [Parameter]
    public RenderFragment? MessageContent { get; set; }

    [Parameter]
    public string DragClass { get; set; } = "active";

    private void OnDragEnter()
    {
        _isDragging = true;
    }

    private void OnDragLeave()
    {
        _isDragging = false;
    }

    private Dictionary<string, object> GetAttributes()
    {
        var attributes = new Dictionary<string, object>();
        if (Multiple)
        {
            attributes.Add("multiple", "multiple");
        }
        if (Accept != null)
        {
            attributes.Add("accept", Accept);
        }
        return attributes;
    }
}